apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.aws.net.starter.org
  labels:
    provider: aws
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: net.starter.org/v1alpha1
    kind: XNetwork
  patchSets:
  - name: network-id
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.labels[aws.net.starter.org/network-id]
  resources:
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            region: eu-north-1
            cidrBlock: 192.168.0.0/16
            enableDnsSupport: true
            enableDnsHostnames: true
            tags:
              Owner: Platform Team
              Name: platform-vpc
      name: platform-vcp
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: InternetGateway
        spec:
          forProvider:
            region: eu-north-1
            vpcIdSelector:
              matchControllerRef: true
      name: gateway
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-north-1a
            access: public
        spec:
          forProvider:
            region: eu-north-1
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.0.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-north-1a
            tags:
              kubernetes.io/role/elb: "1"
      name: subnet-public-west-2a
      patches:
        - type: PatchSet
          patchSetName: network-id
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[0]
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-north-1b
            access: public
        spec:
          forProvider:
            region: eu-north-1
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.64.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-north-1b
            tags:
              kubernetes.io/role/elb: "1"
      name: subnet-public-west-2b
      patches:
        - type: PatchSet
          patchSetName: network-id
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[1]
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-north-1a
            access: private
        spec:
          forProvider:
            region: eu-north-1
            cidrBlock: 192.168.128.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-north-1a
            tags:
              kubernetes.io/role/internal-elb: "1"
      name: subnet-private-west-2a
      patches:
        - type: PatchSet
          patchSetName: network-id
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[2]
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: eu-north-1b
            access: private
        spec:
          forProvider:
            region: eu-north-1
            cidrBlock: 192.168.192.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: eu-north-1b
            tags:
              kubernetes.io/role/internal-elb: "1"
      name: subnet-private-west-2b
      patches:
        - type: PatchSet
          patchSetName: network-id
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.subnetIds[3]
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            region: eu-north-1
            vpcIdSelector:
              matchControllerRef: true
      name: routeTable
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Route
        spec:
          forProvider:
            region: eu-north-1
            destinationCidrBlock: 0.0.0.0/0
            gatewayIdSelector:
              matchControllerRef: true
            routeTableIdSelector:
              matchControllerRef: true
      name: route
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: MainRouteTableAssociation
        spec:
          forProvider:
            region: eu-north-1
            routeTableIdSelector:
              matchControllerRef: true
            vpcIdSelector:
              matchControllerRef: true
      name: mainRouteTableAssociation
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-north-1
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-north-1a
                access: public
      name: RouteTableAssociation-public-a
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-north-1
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-north-1b
                access: public
      name: RouteTableAssociation-public-b
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-north-1
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-north-1a
                access: private
      name: RouteTableAssociation-private-a
      patches:
        - type: PatchSet
          patchSetName: network-id
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: eu-north-1
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: eu-north-1b
                access: private
      name: RouteTableAssociation-private-b
      patches:
        - type: PatchSet
          patchSetName: network-id
    - name: securityGroup
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroup
        spec:
          forProvider:
            region: eu-north-1
            vpcIdSelector:
              matchControllerRef: true
            name: platform-ref-aws-cluster
            description: Allow access to databases
      patches:
        - type: PatchSet
          patchSetName: network-id
        - type: ToCompositeFieldPath
          fromFieldPath: metadata.annotations[crossplane.io/external-name]
          toFieldPath: status.securityGroupIds[0]
    - name: securityGroupRulePostgres
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            region: eu-north-1
            type: ingress
            fromPort: 5432
            toPort: 5432
            protocol: tcp
            cidrBlocks:
              - 0.0.0.0/0
            securityGroupIdSelector:
              matchControllerRef: true
            description: Everywhere
      patches:
        - type: PatchSet
          patchSetName: network-id
    - name: securityGroupRuleMysql
      base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: SecurityGroupRule
        spec:
          forProvider:
            region: eu-north-1
            type: ingress
            fromPort: 3306
            toPort: 3306
            protocol: tcp
            cidrBlocks:
              - 0.0.0.0/0
            securityGroupIdSelector:
              matchControllerRef: true
            description: Everywhere
      patches:
        - type: PatchSet
          patchSetName: network-id
